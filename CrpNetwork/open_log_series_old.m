function open_log_series(fileToRead1,measurename)
%IMPORTFILE(FILETOREAD1)
%  Imports data from the specified file
%  FILETOREAD1:  file to read

%  Auto-generated by MATLAB on 19-May-2013 20:59:12

% Import the file
newData1 = importdata(fileToRead1);

% Create new variables in the base workspace from those fields.
vars = fieldnames(newData1);
for i = 1:length(vars)
    assignin('base', vars{i}, newData1.(vars{i}));
end

[n,m]=size(newData1.data);
Nbars=50;
figure;
mas_degreeDistrCoeff=[];
mas_sh_entr=[];
mas_Hurst=[];
mas_MFDFA_width = [];
mas_MFDFA_max = [];

for i=2:n
    Values=newData1.data(i,:);
    sh_entr=shannon_entr(Values);
    mas_sh_entr=[mas_sh_entr,sh_entr];
    raspr=hist(Values,Nbars);
    raspr=raspr/(sum(raspr));
    hold on;
    minV=min(Values);
    maxV=max(Values);
    stepV=(maxV-minV)/Nbars;
    plot3(ones(size(raspr))*i,minV+stepV*(1:length(raspr)),raspr);
    nonzeroindices=find(raspr~=0);
    YY=log(raspr);
    XX=log(minV+stepV*(1:length(raspr)));
    XX=XX(nonzeroindices);
    YY=YY(nonzeroindices);
    coefs=polyfit(XX,YY,1);
    a=coefs(1);
    b=coefs(2);
    mas_degreeDistrCoeff=[mas_degreeDistrCoeff,a];
    if (0)
        figure;
        plot(XX,YY);
        hold on;
        plot(XX,a*XX+b,'r');
    end
        % ----- Hurst
    [hx,hy] = Hurst2(Values,50,1.1);
    hx = log(hx); hy = log(hy);
    [a,b] = MinSquare(hx,hy);
    mas_Hurst = [mas_Hurst; a];
    % ----- MFDFA
    %    calculateMFDFA(degr,20,400,[-3:0.1:-0.1 0.1:0.1:3],2,'nRatio','100','90');
    try
    [S,FqS,Q]=MFDFA(Values,20,400,[-3:0.1:-0.1 0.1:0.1:3],2,'nRatio','100');
    [Hq,TAUq,Q2]=MFDFAHTau(S,FqS,Q);
    [XResTemp,YResTemp]=MFDFAAlphaFTAUSpline(Q2,TAUq,'90');
    mas_MFDFA_width = [mas_MFDFA_width; (max(XResTemp)-min(XResTemp))];
    [maxMFDFA,imaxMFDFA] = max(YResTemp);
    mas_MFDFA_max = [mas_MFDFA_max; XResTemp(imaxMFDFA(1))];
    catch
        mas_MFDFA_width = [mas_MFDFA_width; NaN];
        mas_MFDFA_max = [mas_MFDFA_max; NaN];
    end

end
xlabel('time,days','FontSize',14);
ylabel(measurename,'FontSize',14);
zlabel('P','FontSize',14);
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_P.fig']);
saveas(gcf,outfilename,'fig');
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_P.jpg']);
saveas(gcf,outfilename,'jpg');
close(gcf);

if (strcmp(measurename,'degree')==1)
figure;
plot(mas_degreeDistrCoeff);
set(gca,'FontSize',14);
h=ylabel('Degree distr coeff');
set(h,'FontSize',14);

h=xlabel('time, days');
set(h,'FontSize',14);

outfilename=strrep(fileToRead1,'.txt',['_' measurename '_DegreeDistrPower.fig']);
saveas(gcf,outfilename,'fig');
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_DegreeDistrPower.jpg']);
saveas(gcf,outfilename,'jpg');
close(gcf);
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_DegreeDistrPower.txt']);
dlmwrite(outfilename,mas_degreeDistrCoeff,'\n');
end


figure;
plot(mas_sh_entr);
h=ylabel([measurename ' Shannon entr']);
set(h,'FontSize',14);

h=xlabel('time,days');
set(h,'FontSize',14);

outfilename=strrep(fileToRead1,'.txt',['_' measurename '_ShEntr.fig']);
saveas(gcf,outfilename,'fig');
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_ShEntr.jpg']);
saveas(gcf,outfilename,'jpg');
close(gcf);
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_ShEntr.txt']);
dlmwrite(outfilename,mas_sh_entr,'\n');

figure;
plot(mas_Hurst);
h=ylabel([measurename ' Hurst']);
set(h,'FontSize',14);

h=xlabel('time,days');
set(h,'FontSize',14);

outfilename=strrep(fileToRead1,'.txt',['_' measurename '_Hurst.fig']);
saveas(gcf,outfilename,'fig');
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_Hurst.jpg']);
saveas(gcf,outfilename,'jpg');
close(gcf);
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_Hurst.txt']);
dlmwrite(outfilename,mas_Hurst,'\n');

figure;
plot(mas_MFDFA_width);
hold on;
plot(mas_MFDFA_max);
legend('MFDFA width','MFDFA max');
h=ylabel([measurename ' MFDFA']);
set(h,'FontSize',14);

h=xlabel('time,days');
set(h,'FontSize',14);

outfilename=strrep(fileToRead1,'.txt',['_' measurename '_MFDFA.fig']);
saveas(gcf,outfilename,'fig');
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_MFDFA.jpg']);
saveas(gcf,outfilename,'jpg');
close(gcf);
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_MFDFA_max.txt']);
dlmwrite(outfilename,mas_MFDFA_max,'\n');
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_MFDFA_width.txt']);
dlmwrite(outfilename,mas_MFDFA_width,'\n');


figure;
mesh(newData1.data(2:end,:));
h=ylabel('time,days');
set(h,'FontSize',14);

h=xlabel('node number');
set(h,'FontSize',14);

h=zlabel(measurename);
set(h,'FontSize',14);

outfilename=strrep(fileToRead1,'.txt',['_' measurename '_orig.fig']);
saveas(gcf,outfilename,'fig');
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_orig.jpg']);
saveas(gcf,outfilename,'jpg');
close(gcf);

sorted_data=sort(newData1.data(2:end,:),2);
figure;
mesh(sorted_data);
h=ylabel('time,days');
set(h,'FontSize',14);

h=xlabel('node number');
set(h,'FontSize',14);

h=zlabel(measurename);
set(h,'FontSize',14);

outfilename=strrep(fileToRead1,'.txt',['_' measurename '_sort.fig']);
saveas(gcf,outfilename,'fig');
outfilename=strrep(fileToRead1,'.txt',['_' measurename '_sort.jpg']);
saveas(gcf,outfilename,'jpg');
close(gcf);